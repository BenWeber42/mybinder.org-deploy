language: python

python:
  - 3.6

cache: pip

install:
  - pip install pyyaml pytest pytest-timeout requests

script:
 - true

before_deploy:
- mkdir -p ${HOME}/bin
- |
  # Install gcloud SDK!
  curl -L https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-173.0.0-linux-x86_64.tar.gz | tar --directory ${HOME} --extract --gzip --file -
- |
  # Install Kubectl
  curl -L https://storage.googleapis.com/kubernetes-release/release/v1.9.0/bin/linux/amd64/kubectl > ${HOME}/bin/kubectl
  chmod +x ${HOME}/bin/kubectl
- |
  # Install helm
  curl -L https://storage.googleapis.com/kubernetes-helm/helm-v2.7.0-linux-amd64.tar.gz | tar --directory ${HOME} --extract --gzip --file - && mv ${HOME}/linux-amd64/helm ${HOME}/bin/helm
- |
  # Set up helm!
  helm init --client-only
  helm repo add jupyterhub https://jupyterhub.github.io/helm-chart
  helm repo update
  (cd mybinder && helm dep up)
- |
  # Install git-crypt
  curl -L https://github.com/minrk/git-crypt-bin/releases/download/0.5.0/git-crypt > git-crypt
  echo "46c288cc849c23a28239de3386c6050e5c7d7acd50b1d0248d86e6efff09c61b  git-crypt" | shasum -a 256 -c -
  chmod +x git-crypt
  mv git-crypt ${HOME}/bin/git-crypt
- |
  # Unlock our secret files!
  # Travis allows encrypting only one file per repo (boo) so we use it to
  # encrypt our git-crypt key
  cd ${TRAVIS_BUILD_DIR}
  openssl aes-256-cbc -K $encrypted_510e3970077d_key -iv $encrypted_510e3970077d_iv -in travis/crypt-key.enc -out travis/crypt-key -d
  git-crypt unlock travis/crypt-key
  chmod 0600 secrets/*key
- |
  # Deploy to staging & verify it works
  python ./deploy.py staging staging && \
  py.test --binder-url=https://staging.mybinder.org --hub-url=https://hub.staging.mybinder.org

env:
  global:
    - CLOUDSDK_CORE_DISABLE_PROMPTS=1
    - PATH=${HOME}/google-cloud-sdk/bin:${HOME}/bin:${PATH}

# HACK: This is in deploy and not script simply because travis will *not*
# cancel subsequent steps if an earlier step fails!!!! So we do not want
# to deploy to prod if staging failed, so it's in deploy (which is not run
# if script fails) rather than as script.
# FIXME: Maybe move to CircleCI?
deploy:
  provider: script
  script: python ./deploy.py prod prod-a && py.test --binder-url=https://mybinder.org --hub-url=https://hub.mybinder.org
  skip_cleanup:
  on:
    branch:
      - master

branches:
  only:
    - master

notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/2b2f3e2bfcef7f67d74a
    on_success: change
    on_failure: change
    on_error: change
    on_start: never
    on_cancel: never
