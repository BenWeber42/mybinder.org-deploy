projectName: turing

binderhub:
  config:
    BinderHub:
      pod_quota: 120
      hub_url: https://hub.turing.mybinder.org
      badge_base_url: https://mybinder.org
      image_prefix: turingmybinderregistry.azurecr.io/binder-prod/binder-prod-
      sticky_builds: true
    DockerRegistry:
      token_url: https://turingmybinderregistry.azurecr.io/oauth2/token?service=turingmybinderregistry.azurecr.io
  registry:
    url: https://turingmybinderregistry.azurecr.io

  replicas: 1

  resources:
    requests:
      cpu: "0.25"
      memory: 1Gi
    limits:
      cpu: "2"
      memory: 1Gi

  extraVolumes:
    - name: secrets
      secret:
        secretName: events-archiver-secrets
  extraVolumeMounts:
    - name: secrets
      mountPath: /secrets
      readOnly: true
  extraEnv:
    - name: GOOGLE_APPLICATION_CREDENTIALS
      value: /secrets/service-account.json

  ingress:
    hosts:
      - turing.mybinder.org

  jupyterhub:
    hub:
      resources:
        requests:
          cpu: "0.25"
          memory: 1Gi
        limits:
          cpu: "2"
          memory: 1Gi
    singleuser:
      memory:
        guarantee: 550M
        limit: 2G
      cpu:
        guarantee: 0.01
        limit: 1
    proxy:
      https:
        type: offload
      chp:
        resources:
          requests:
            memory: 320Mi
            cpu: "0.1"
          limits:
            memory: 320Mi
            cpu: "0.5"
      nginx:
        resources:
          requests:
            memory: 512Mi
            cpu: "0.25"
          limits:
            memory: 512Mi
            cpu: 1

    ingress:
      annotations:
        kubernetes.io/ingress.class: nginx
        kubernetes.io/tls-acme: 'false'
      hosts:
        - hub.turing.mybinder.org
      tls:
        - secretName: tls-crt
          hosts:
            - hub.turing.mybinder.org

    scheduling:
      userScheduler:
        enabled: false
      podPriority:
        enabled: true
      userPlaceholder:
        enabled: true
        replicas: 5

grafana:
  ingress:
    annotations:
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: 'false'
    hosts:
      - grafana-turing.mybinder.org
    tls:
      - hosts:
          - grafana-turing.mybinder.org
        secretName: tls-crt-turing
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: prometheus
          orgId: 1
          type: prometheus
          url: https://prometheus-turing.mybinder.org
          access: direct
          isDefault: true
          editable: false

prometheus:
  server:
    ingress:
      annotations:
        kubernetes.io/ingress.class: nginx
        kubernetes.io/tls-acme: 'false'
      hosts:
        - prometheus-turing.mybinder.org
      tls:
        - hosts:
            - prometheus-turing.mybinder.org
          secretName: tls-crt-turing

nginx-ingress:
  controller:
    hostNetwork: true
    replicaCount: 1
  scope:
    enabled: false


static:
  ingress:
    annotations:
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: 'false'
    hosts:
      - static-turing.mybinder.org
    tls:
      - hosts:
          - static-turing.mybinder.org
        secretName: tls-crt-turing

redirector:
  redirects:
    - type: host
      # host:
      #   from: beta-binder.mybinder.ovh
      #   to: binder.mybinder.ovh
    - type: host
      host:
        from: docs-turing.mybinder.org
        to: mybinder.readthedocs.io
    - type: host
      host:
        from: playground-turing.mybinder.org
        to: play.nteract.io

matomo:
  enabled: false
  db:
    instanceName: binder-staging:us-central1:matomo
  trustedHosts:
    - staging-turing.mybinder.org
  ingress:
    hosts:
      - staging-turing.mybinder.org

analyticsPublisher:
  enabled: false
  project: binder-turing
  events:
    sourceBucket: mybinder-staging-events-raw-export
    destinationBucket: mybinder-staging-events-archive

gcsProxy:
  enabled: false
  buckets:
    - name: mybinder-staging-events-archive
      host: archive-analytics-staging-turing.mybinder.org
